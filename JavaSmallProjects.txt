package bankAccountApp;

//Super class Accounts
public abstract class Accounts implements InterestBaseRate{
	//List common properties for checking and savings accounts(firstName, lastName, contact details)
	private String name;
	private String SSN;
	private Double balance;
	protected  String accountNumber;
	protected double rate;
	private static int index = 10000;
	
	//Constructor to set common properties and initialize the account
	public Accounts(String name, String SSN, double initalDeposit){
		this.name = name;
		this.SSN = SSN;
		balance = initalDeposit+100;
		
		//Set account number
		index++;
		this.accountNumber = setAccountNumber();
		setRate();
	}
        //Abstract method setRate
	public abstract void setRate();
	
	private String setAccountNumber(){
		String lastThreeOfSSN = SSN.substring(SSN.length()-3, SSN.length());//(for last 3 digit SSN, you do 'SSN.substring(SSN.length()-3, SSN.length())')
		int uniqueID = index;
		int randomNumber = (int)(Math.random()*Math.pow(10, 3));//(to generate a random 3 digit number, you do 10 power 3)
		return lastThreeOfSSN + uniqueID + randomNumber;
	}
	public void compound(){
		double accuredInterest = balance * (rate/100);
		balance = balance + accuredInterest;
		System.out.println("Accured Interest : " + accuredInterest);
		printBalance();
	}
	
	//List common methods (deposit, withdraw, transfer, showInfo)
	public void deposit(double amount){
		balance = balance + amount;
		System.out.println("Depositing amount $" + amount);
		printBalance();
	}
	public void withdraw(double amount){
		balance = balance - amount;
		System.out.println("Withdrawing amount $" + amount);
		printBalance();
	}
	public void transfer(String toWhere, double amount ){
		balance = balance - amount;
		System.out.println("Transfering amount to : $" + amount + " to " + toWhere);
		printBalance();
	}
	public void printBalance(){
		System.out.println("Your balance is now : $ " + balance );
	}
	
	public void showInformation(){
		System.out.println("Name : " + name
				+"\nAccount Number : " + accountNumber
				+"\nBalance : " + balance + 
				"\n Rate : " + rate + "%" );
		
	}

}
**********
package bankAccountApp;

import java.util.LinkedList;
import java.util.List;
//BankAccountApplication main class
public class BankAccountApplication {

	public static void main(String[] args) {
		
		/*Savings savings = new Savings("Lily Belle", "987654321", 2000);
		Checking checking = new Checking("Tim Wilson", "123456789", 1500);
		savings.showInformation();
		System.out.println();
		checking.showInformation();
		
		savings.compound();
		
		savings.deposit(5000);
		savings.withdraw(1000);
		savings.transfer("Insurance", 500);
		
	
		*/
		
		List<Accounts> list = new LinkedList<Accounts>();
		
		//Read a CSV file then create new accounts based on the data
		String file = " /Users/praneetharaj/Documents/New\ Accounts.txt ";//Not able to read this file. Trying to work different ways.
		List<String[]> newAccountHolder =  utilities.CSV.read(file);
		for(String[] accountHolder : newAccountHolder){
			String name = accountHolder[0];
			String SSN = accountHolder[1];
			String accountType = accountHolder[2];
			double initialDeposit = Double.parseDouble(accountHolder[3]);
			System.out.println(name + " " + SSN + " " + accountType + "$" + initialDeposit);
			if(accountType.equals("Savings")){
				System.out.println("Open a savings account");
				list.add(new Savings(name, SSN, initialDeposit));
			}
			else{
				if(accountType.equals("Checking")){
					System.out.println("Open a checking account");
					list.add(new Checking(name, SSN, initialDeposit));
				}
				else{
					System.out.println("Error reading account type");
				}
			}
		
			
			for(Accounts account : list){
				System.out.println("\n ***********");
				account.showInformation();
			}
		}
	}
}
**********
package utilities;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.LinkedList;
import java.util.List;

//Comma separated variables file
public class CSV {
	
	//This function will read data from a CSV file and return as a list
	public static List<String[]> read(String file){
		List<String[]> list = new LinkedList<String[]>();
		String dataRow;
		try {
			BufferedReader bufferedReader = new BufferedReader(new FileReader(file));
		   while((dataRow = bufferedReader.readLine()) != null){
			String[] dataRecords = dataRow.split(",");
			list.add(dataRecords);
		   }
		} catch (FileNotFoundException e) {
			System.out.println("Could not find file");
			e.printStackTrace();
		} catch (IOException e) {
			System.out.println("Could not read file");
			e.printStackTrace();
		}
		return list;
		
	}

}

***********
package bankAccountApp;
//Subclass Checking class
public class Checking extends Accounts{
	//List properties specific to the checking account(debit card and a pin)
	private int debitCardNumber;
	private int debitCardPin;
	
	//call constructor to initialize our checking account properties
	public Checking(String name, String SSN, double initalDeposit){
		super(name, SSN, initalDeposit);
		accountNumber = "2" + accountNumber;
		setDebitCard();
	}
	@Override
	public void setRate() {
		rate = getBaseRate() * 0.15;
		
	}
	
	//List any methods specific to the checking account	
	public void setDebitCard(){
		debitCardNumber = (int)(Math.random() * Math.pow(10, 12));
		debitCardPin = (int)(Math.random() * Math.pow(10, 4));
	}
        //Shows all specific information related to only checking
	public void showInformation(){
		super.showInformation();
		System.out.println("Your Checking account features :  " + 
		"\n Your debit card number : " + debitCardNumber + 
		"\n Your debit card pin : " + debitCardPin );	
	}
}
**********
package bankAccountApp;
//Subclass Checking class
public class Savings extends Accounts{
	//List properties specific to the savings account(debit card and a pin)
	private int safetyDepositBoxId;
	private int safetyDepositBoxKey;
	
	//call constructor to initialize our checking account properties
	public Savings(String name, String SSN, double initalDeposit){
		super(name, SSN, initalDeposit);
		accountNumber = "1" + accountNumber;
		setSafetyDepositBox();		
	}
	@Override
	public void setRate() {
		rate = getBaseRate() - 0.25;
	}

	
	public void setSafetyDepositBox(){
		safetyDepositBoxId = (int)(Math.random()*Math.pow(10, 3));
		safetyDepositBoxKey = (int)(Math.random() * Math.pow(10, 4));
	}
		
	//List any methods specific to the savings account
	public void showInformation(){
		super.showInformation();
		System.out.println("Your Savings account features : " +
		"\n Safety Deposit Box ID : " + safetyDepositBoxId +
		"\n Safety Deposit Box Key : " + safetyDepositBoxKey );
	}
}
**********
package bankAccountApp;
//Interface InterestBaseRate
public interface InterestBaseRate {

	//write a method to return base rate
	default double getBaseRate(){
		return 2.5;
	}
}
***************
 
 //A small interactive app in Java that displays some user credentials
package emailApp;
import java.util.Scanner;


public class EmailApp {


        /*
         * Main method that displays dept codes, user enter dept codes 
         */
        public static void main(String[] args) {
                String firstName = "RO";
                String lastName = " Ci";
                String fullName = firstName + lastName;
                System.out.println(fullName);
                System.out.println("Hello, my name is " + fullName);
                System.out.println("There are " +19 + " letters in my name");
                for(int i=1; i>=100; i++){
                        System.out.println(i);
                }
                
                System.out.print("Enter your address :");
                Scanner scanner = new Scanner(System.in);
                String address = scanner.nextLine();
                System.out.println("Ro lives here : " + address);
                
                System.out.print("Enter your grades : ");
                Scanner scanner1 = new Scanner(System.in);
                int grades = scanner1.nextInt();
                if(grades>90){
                        System.out.println("You did well!");
                }
                else{
                        System.out.println("You can do better, try again");
                }


        }


}


 Output :
RO Ci
Hello, my name is RO Ci
There are 19 letters in my name
Enter your address :123 yok rd
Ro lives here : 123 yok rd
Enter your grades : 77
You can do better, try again


//Multi Class interactive Java app
package emailApp;
import java.util.Scanner;
/*
Class that defines users credentials
*/
public class Email {
        private String firstName;
        private String lastName;
        private String password;
        private String department;
        private int mailBoxCapacity;
        private String alternateEmail;
        
        //Constructor to receive firstName and lastName
        public Email(String firstName, String lastName){
                this.firstName = firstName;
                this.lastName = lastName;
                System.out.println("Email Created : " + this.firstName + this.lastName);
        
                //Call a method asking for the department - that would return a department
                this.department = setDept();
                System.out.println("Dept : " + this.department);
        }
        
        //Ask for department
        private String setDept(){
                System.out.println("Dept Codes are :\n1 for Sales\n2 for Development\n3 for Accounting\n4 for none\nEnter dept codes : ");
                Scanner input = new Scanner(System.in);
                int department = input.nextInt();
                if(department==1){
                        return "Sales";
                }
                else if(department==2){
                        return "Development";
                }
                else if(department==3){
                        return "Accounting";
                }
                else {
                        return "None";
                }
                
        }


}


/*
Main class that displays user credentials
*/
package emailApp;


public class EmailAppMain {


        public static void main(String[] args) {
                Email email = new Email("Praneetha", " Rajashekar");


        }


}


Output :
Email Created : Praneetha Rajashekar
Dept Codes are :
1 for Sales
2 for Development
3 for Accounting
4 for none
Enter dept codes : 
2
Dept : Development


//Concept of Inheritance 


package Room;
/*
Class(SuperClass) that defines a room’s credentials
*/
public class Room {
        private double width;
        private double height;
        //constructor
        public Room(double width, double height){
                this.width = width;
                this.height = height;
        }
        //method to calculate area
        public final double getArea(){
                return width*height;
        }
}


/*
Class(SubClass) that extends super class
*/
package Room;


public class LivingRoom extends Room{
        
        //Constructor defining
        public LivingRoom(double width, double height){
                super(width, height);
        }
}


//Main Class
package Room;


public class MainMethod {


        public static void main(String[] args) {
                LivingRoom livingRoom = new LivingRoom(3, 5);
                double area = livingRoom.getArea();
                System.out.println("The calculated area of the Living room is : " + area);
        }
}


Output : The calculated area of the Living room is : 15.0


//Guess Game
package OOPinJava;


import java.util.Scanner;


public class NumberGame {
        public static void main(String[] args){
                int randomNumber = (int)(Math.random()*100) + 1;
                boolean hasWon = false;
                
                System.out.println("I have chosen a random number from 1 to 100");
                System.out.println("Try to guess it");
                
                Scanner scanner = new Scanner(System.in);
                for(int i=10; i>0; i--){
                        
                        System.out.println("You have " + i + " guess(es) left. ");
                        int guess = scanner.nextInt();
                        
                        if(randomNumber<guess){
                                System.out.println("Your randomnumber is smaller than " + guess);
                                
                        }
                        else if(randomNumber>guess){
                                System.out.println("Your randomnumber is greater than " + guess);
                                
                        }
                        else{
                                hasWon = true;
                                break;
                        }
                }
                if(hasWon){
                        System.out.println("Your guess was correct, You win");
                }else{
                        System.out.println("You lose");
                        System.out.println("The random number " + randomNumber);
                }
        }
                


}
 Output : 
I have chosen a random number from 1 to 100
Try to guess it
You have 10 guess(es) left. 
44
Your randomnumber is greater than 44
You have 9 guess(es) left. 
55
Your randomnumber is greater than 55
You have 8 guess(es) left. 
78
Your randomnumber is greater than 78
You have 7 guess(es) left. 
88
Your randomnumber is greater than 88
You have 6 guess(es) left. 
99
Your randomnumber is smaller than 99
You have 5 guess(es) left. 
98
Your randomnumber is smaller than 98
You have 4 guess(es) left. 
90
Your randomnumber is greater than 90
You have 3 guess(es) left. 
91
Your guess was correct, You win
